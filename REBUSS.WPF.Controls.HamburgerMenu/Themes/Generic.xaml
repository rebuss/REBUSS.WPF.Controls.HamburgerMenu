<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:hamburgerMenu="clr-namespace:REBUSS.WPF.Controls.HamburgerMenu">

    <ControlTemplate x:Key="MenuGroupBoxControlTemplate" TargetType="{x:Type GroupBox}">
        <ContentPresenter/>
    </ControlTemplate>

    <ControlTemplate x:Key="HamburgeMenuExpanderButton" TargetType="{x:Type hamburgerMenu:SwitchButton}">
        <Grid x:Name="grid" 
              Width="Auto" 
              Background="Transparent">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource ActiveHighlightedBackgroundColor}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Opacity)" Storyboard.TargetName="grid">
                                <DiscreteDoubleKeyFrame KeyTime="0" Value="0.5"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Focused">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource ActiveHighlightedBackgroundColor}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Opacity)" Storyboard.TargetName="grid">
                                <DiscreteDoubleKeyFrame KeyTime="0" Value="0.5"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource ActivePressedBackgroundColor}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Opacity)" Storyboard.TargetName="grid">
                                <DiscreteDoubleKeyFrame KeyTime="0" Value="0.5"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <ContentPresenter Height="Auto" VerticalAlignment="Center" HorizontalAlignment="Stretch"/>
            <ContentControl x:Name="Header" 
                            Content="{TemplateBinding Header}" 
                       FontSize="{TemplateBinding FontSize}"
                       FontWeight="Bold"
                       FontFamily="{TemplateBinding FontFamily}"
                       Grid.Column="1" 
                       HorizontalAlignment="Left" 
                       VerticalAlignment="Center"
                       Margin="10,0,0,0"
                       Padding="0"
                       Opacity="{Binding TextOpacity, RelativeSource={RelativeSource AncestorType=hamburgerMenu:HamburgerMenu}}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ActiveHighlightedForeground}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ActivePressedForeground}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="HamburgerMenuItemControlTemplate" TargetType="{x:Type hamburgerMenu:HamburgerMenuItem}">
        <Grid x:Name="grid" Height="Auto" Width="Auto" Background="Transparent">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource ActiveHighlightedBackgroundColor}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Opacity)" Storyboard.TargetName="grid">
                                <DiscreteDoubleKeyFrame KeyTime="0" Value="0.5"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Focused">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource ActiveHighlightedBackgroundColor}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Opacity)" Storyboard.TargetName="grid">
                                <DiscreteDoubleKeyFrame KeyTime="0" Value="0.5"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource ActivePressedBackgroundColor}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Opacity)" Storyboard.TargetName="grid">
                                <DiscreteDoubleKeyFrame KeyTime="0" Value="0.5"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled"/>
                </VisualStateGroup>

            </VisualStateManager.VisualStateGroups>

            <Rectangle Stretch="Fill" 
                       Fill="{TemplateBinding BarBrush}" 
                       Width="6"
                       HorizontalAlignment="Left" 
                       VerticalAlignment="Stretch"
                       Visibility="Collapsed"
                       x:Name="bar"
                       Margin="0,8"/>
            <ContentPresenter x:Name="path"
                              Width="{TemplateBinding IconWidth}"
                              VerticalAlignment="Center" 
                              HorizontalAlignment="Center"
                              Content="{TemplateBinding Content}"
                              Margin="10"
                              Grid.Column="0"/>
            <TextBlock x:Name="TextPresenter" Text="{TemplateBinding Text}" 
                       FontSize="{TemplateBinding FontSize}"
                       FontWeight="Bold"
                       FontFamily="{TemplateBinding FontFamily}"
                       Grid.Column="1" 
                       HorizontalAlignment="Left" 
                       VerticalAlignment="Center"
                       Margin="10,0,0,0"
                       Padding="0"
                       TextAlignment="Center" 
                       Opacity="{Binding TextOpacity, RelativeSource={RelativeSource AncestorType=hamburgerMenu:HamburgerMenu}}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ActiveHighlightedForeground}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ActivePressedForeground}"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ActiveHighlightedForeground}"/>
                <Setter Property="Visibility" TargetName="bar" Value="Visible"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type hamburgerMenu:HamburgerMenuItem}">
        <Setter Property="Template" Value="{StaticResource HamburgerMenuItemControlTemplate}"/>
        <Setter Property="Foreground" Value="{DynamicResource ActiveNormalForeground}"/>
        <Setter Property="FontFamily" Value="Segoe UI Symbol"/>
    </Style>

    <Style TargetType="{x:Type hamburgerMenu:SwitchButton}">
        <Setter Property="Template" Value="{StaticResource HamburgeMenuExpanderButton}"/>
        <Setter Property="Foreground" Value="{DynamicResource ActiveNormalForeground}"/>
        <Setter Property="FontFamily" Value="Segoe UI Symbol"/>
    </Style>

    <ControlTemplate x:Key="HamburgerMenuControlTemplate" TargetType="{x:Type hamburgerMenu:HamburgerMenu}">

        <Grid x:Name="itemsControl" MinWidth="{TemplateBinding CompactPaneWidth}" 
              KeyboardNavigation.IsTabStop="False"
              Background="{TemplateBinding Background}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <ContentControl Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0" Grid.RowSpan="2" 
                            VerticalAlignment="Stretch"
                            HorizontalAlignment="Stretch"
                            Content="{TemplateBinding BackgroundContent}"
                            KeyboardNavigation.IsTabStop="False"/>
            <hamburgerMenu:SwitchButton IsChecked="{Binding IsOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                        HorizontalAlignment="Stretch"
                                        x:Name="switchButton"
                                        Margin="0" 
                                        Header="{TemplateBinding Header}"
                                        CompactMenuTooltip="{TemplateBinding CompactMenuTooltip}"
                                        OpenMenuTooltip="{TemplateBinding OpenMenuTooltip}"
                                        DockPanel.Dock="Top"
                                        Content="{TemplateBinding SwitchButtonContent}"
                                        Grid.ColumnSpan="2"/>

            <Line X1="0" X2="1" Stretch="Fill" 
              HorizontalAlignment="Stretch" 
              VerticalAlignment="Bottom" 
              Stroke="{DynamicResource ActiveHighlightedBackground}"
              StrokeThickness="1"
              DockPanel.Dock="Top" Grid.Row="0" Grid.ColumnSpan="2" Grid.Column="0"
              KeyboardNavigation.IsTabStop="False"/>
            <ItemsPresenter Margin="{TemplateBinding Padding}" 
                            DockPanel.Dock="Bottom" Grid.Row="1" Grid.ColumnSpan="2" Grid.Column="0"
                            KeyboardNavigation.IsTabStop="False"/>
        </Grid>
    </ControlTemplate>

    <Style TargetType="{x:Type hamburgerMenu:HamburgerMenu}">
        <Setter Property="Background" Value="{DynamicResource ActiveBackground}"/>
        <Setter Property="Width" Value="{Binding CompactPaneWidth, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="Template" Value="{StaticResource HamburgerMenuControlTemplate}"/>
        <Setter Property="FontSize" Value="22"></Setter>
        <Setter Property="OpenPaneWidth" Value="250"/>
        <Setter Property="BarBrush" Value="{DynamicResource ActiveSelectedForeground}"/>
        <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
        <Setter Property="SwitchButtonContent">
            <Setter.Value>
                <Path x:Name="path" 
                      Data="M1.5000005,1.5 L20.500001,1.5 M1.5000005,9.5000003 L20.500001,9.5000003 M1.5,17.499999 L20.499999,17.499999" 
                      Stretch="Fill" 
                      StrokeThickness="3" 
                      Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=hamburgerMenu:SwitchButton}}"
                      HorizontalAlignment="Left"
                      Margin="14"/>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
