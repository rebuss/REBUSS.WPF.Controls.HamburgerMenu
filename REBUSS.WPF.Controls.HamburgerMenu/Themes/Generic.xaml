<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:hamburgerMenu="clr-namespace:REBUSS.WPF.Controls.HamburgerMenu">

    <ControlTemplate x:Key="MenuGroupBoxControlTemplate" TargetType="{x:Type GroupBox}">
        <ContentPresenter/>
    </ControlTemplate>

    <ControlTemplate x:Key="HamburgeMenuExpanderButton" TargetType="{x:Type hamburgerMenu:SwitchButton}">
        <Grid x:Name="grid" Height="46" Width="Auto" Background="{DynamicResource ActiveBackground}">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource ActiveHighlightedForegroundColor}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource ActiveHighlightedBackgroundColor}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource ActivePressedBackgroundColor}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource ActivePressedForegroundColor}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(ToolTipService.ToolTip)" Storyboard.TargetName="grid">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{TemplateBinding CollapseMenuTooltip}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unchecked">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(ToolTipService.ToolTip)" Storyboard.TargetName="grid">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{TemplateBinding ExpandMenuTooltip}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>

            </VisualStateManager.VisualStateGroups>
            <Path x:Name="path" Data="M1.5000005,1.5 L20.500001,1.5 M1.5000005,9.5000003 L20.500001,9.5000003 M1.5,17.499999 L20.499999,17.499999" 
                  Height="Auto" Width="22" Stretch="Fill" VerticalAlignment="Center" StrokeThickness="3" HorizontalAlignment="Left" Margin="14" 
                  Stroke="{DynamicResource ActiveNormalForeground}"/>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="HamburgerMenuItemControlTemplate" TargetType="{x:Type hamburgerMenu:HamburgerMenuItem}">
        <Grid x:Name="grid" Height="Auto" Width="Auto" Background="{DynamicResource ActiveBackground}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="50"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource ActiveHighlightedBackgroundColor}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource ActivePressedBackgroundColor}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled"/>
                </VisualStateGroup>

            </VisualStateManager.VisualStateGroups>
            <ContentPresenter x:Name="path"
                              Height="Auto" 
                              VerticalAlignment="Center" 
                              HorizontalAlignment="Center"
                              Content="{TemplateBinding Content}"/>
            <TextBlock x:Name="TextPresenter" Text="{TemplateBinding Text}" 
                       FontSize="{TemplateBinding FontSize}"
                       FontWeight="Bold"
                       FontFamily="{TemplateBinding FontFamily}"
                       Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center"
                       Margin="10,0,0,0"
                       TextAlignment="Center" 
                       Opacity="{Binding TextOpacity, RelativeSource={RelativeSource AncestorType=hamburgerMenu:HamburgerMenu}}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ActiveHighlightedForeground}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ActivePressedForeground}"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ActiveHighlightedForeground}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type hamburgerMenu:HamburgerMenuItem}">
        <Setter Property="Template" Value="{StaticResource HamburgerMenuItemControlTemplate}"/>
        <Setter Property="Foreground" Value="{DynamicResource ActiveNormalForeground}"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="MinHeight" Value="50"/>
        <Setter Property="FontFamily" Value="Segoe UI Symbol"/>
    </Style>

    <ControlTemplate x:Key="HamburgerMenuControlTemplate" TargetType="{x:Type hamburgerMenu:HamburgerMenu}">
        <DockPanel Background="{TemplateBinding Background}" x:Name="itemsControl" MinWidth="40"
                   LastChildFill="True">
            <hamburgerMenu:SwitchButton IsChecked="{Binding IsOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                        HorizontalAlignment="Stretch"
                                        x:Name="switchButton"
                                        Margin="0" 
                                        CollapseMenuTooltip="{TemplateBinding CollapseMenuTooltip}"
                                        ExpandMenuTooltip="{TemplateBinding ExpandMenuTooltip}"
                                        Template="{StaticResource HamburgeMenuExpanderButton}"
                                        DockPanel.Dock="Top"/>
            
            <Line X1="0" X2="1" Stretch="Fill" 
              HorizontalAlignment="Stretch" 
              VerticalAlignment="Bottom" 
              Stroke="{DynamicResource ActiveHighlightedBackground}"
              StrokeThickness="1"
                  DockPanel.Dock="Top"/>
            <GroupBox Template="{StaticResource MenuGroupBoxControlTemplate}" 
                      Margin="{TemplateBinding Padding}" DockPanel.Dock="Bottom">
                <ItemsPresenter/>
            </GroupBox>
        </DockPanel>
        <ControlTemplate.Triggers>
            <EventTrigger RoutedEvent="ToggleButton.Unchecked" SourceName="switchButton">
                <BeginStoryboard x:Name="CollapseHamburgerMenuBeginStoryboard">
                    <Storyboard AutoReverse="False">
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="50"/>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(hamburgerMenu:HamburgerMenu.TextOpacity)">
                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type hamburgerMenu:HamburgerMenu}">
        <Setter Property="MinWidth" Value="40"/>
        <Setter Property="Background" Value="{DynamicResource ActiveBackground}"/>
        <Setter Property="Width" Value="50"/>
        <Setter Property="Template" Value="{StaticResource HamburgerMenuControlTemplate}"/>
    </Style>
</ResourceDictionary>
